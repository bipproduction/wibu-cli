/* eslint-disable @typescript-eslint/no-explicit-any */
"use client";
import localforage from "localforage";
import { useEffect } from "react";
import { EnvClient } from "./EnvClient";
import useDataPush  from "../state/data-push";

export function WibuStreamProvider() {
  const {setData} = useDataPush();
  useEffect(() => {
    const registerServiceWorker = async () => {
      try {
        if (typeof window !== "undefined" && "serviceWorker" in navigator) {
          // Register service worker
          const registration = await navigator.serviceWorker.register(
            "/wibu-stream-worker.js"
          );

          // Subscribe to push notifications
          const subscription = await registration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: EnvClient.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY
          });
          if (subscription.endpoint) {
            await localforage.setItem("wibu-stream-subscription", subscription.toJSON());
            console.log("wibu-stream-subscription", subscription);
          } else {
            console.log("no wibu-stream-subscription");
          }

          // Listen for messages from the service worker
          navigator.serviceWorker.addEventListener(
            "message",
            (event: MessageEvent) => {
              if (event.data && event.data.type === "PUSH_MESSAGE") {
                console.log("Received push message:", event.data.payload);
                setData(event.data.payload);
              }
            }
          );
        }
      } catch (error) {
        console.error(
          "Error during service worker registration or push subscription:",
          error
        );
      }
    };

    registerServiceWorker();
  }, []);

  return null;
}

// wibu:1.0.81